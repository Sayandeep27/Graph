class Solution {
  public:
  
  vector<int>ans;
    
    void dfs(int node,vector<int>&visited,vector<int>adj[])
    {
        visited[node]=1;
        ans.push_back(node);
        
        for(auto it:adj[node])
        {
            if(visited[it]==0)
            {
                dfs(it,visited,adj);
            }
        }
    }
  
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int n=V;
        
        vector<int>visited(n+1,0);
        
        int start=0;
        
        dfs(start,visited,adj);
        
        return ans;
    }
};
