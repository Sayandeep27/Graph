class Solution {
  public:
    int findCity(int n, int m, vector<vector<int>>& edges, int threshold)
    {
                     
      
      vector<vector<int>> dist(n, vector<int> (n, INT_MAX));
		for (auto it : edges) {
			dist[it[0]][it[1]] = it[2];
			dist[it[1]][it[0]] = it[2];
		}
		
		
		
		for(int i=0;i<n;i++)
		{
		    for(int j=0;j<n;j++)
		    {
		        if(i==j)
		        {
		            dist[i][j]=0;
		        }
		    }
		}
		
		
		
		for (int k = 0; k < n; k++) {
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					if (dist[i][k] == INT_MAX || dist[k][j] == INT_MAX)
						continue;
					dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
				}
			}
		}
      
      
      
      
                     
        int total=n;
        int ans=-1;
        
        for(int i=0;i<n;i++)
        {
            int cnt=0;
            
            for(int j=0;j<n;j++)
            {
                if(dist[i][j]<=threshold)
                {
                    cnt++;
                }
            }
            
            if(cnt<=total)
            {
                total=cnt;
                ans=i;
            }
            
        }
                     
        
        return ans;
                     
     }
};
