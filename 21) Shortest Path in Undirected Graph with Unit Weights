#include <bits/stdc++.h>
using namespace std;

class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int n, vector<int> adj[],int src) {
       
       vector<int>dist(n,0);
       
       for(int i=0;i<n;i++)
       {
           dist[i]=INT_MAX;
       }
       
       
       queue<int>q;
       
       q.push(0);
       dist[src]=0;
       
       while(!q.empty())
       {
           int node=q.front();
           q.pop();
           
           for(auto it:adj[node])
           {
              if(dist[node]+1<dist[it])
              {
                  dist[it]=dist[node]+1;
                  q.push(it);
              }
           }
           
       }
       
       
      return dist;
       
    }
};

void addEdge(vector <int> adj[], int u, int v) {
    adj[u].push_back(v);
    adj[v].push_back(u);
}

void printAns(vector <int> &ans) {
    for (int i = 0; i < ans.size(); i++) {
        cout << ans[i] << " ";
    }
}

int main() 
{
    vector <int> adj[6];
    
    addEdge(adj, 0, 1);
    addEdge(adj, 1, 2);
    addEdge(adj, 1, 3);
    addEdge(adj, 0, 4);

    Solution obj;
    vector <int> ans = obj.bfsOfGraph(5, adj,0);
    printAns(ans);

    return 0;
}
